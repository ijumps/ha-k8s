{% macro initial_cluster() -%}
{% for host in groups[etcd_peers_group] -%}
  {{ hostvars[host]['ansible_host'] }}={{ etcd_peer_url_scheme }}://{{ hostvars[host]['ansible_host'] }}:{{ etcd_peer_port }}
  {%- if not loop.last -%},{%- endif -%}
{%- endfor -%}
{% endmacro -%}

{% set general_options = [] -%}
{% if groups[etcd_peers_group] and groups[etcd_peers_group] | length > 0 -%}
{{ general_options.append('--name=' + hostvars[item]['ansible_host'])|default('', true) -}}
{% else -%}
{{ general_options.append('--name=default')|default('', true) -}}
{% endif -%}
{{ general_options.append('--data-dir=' + etcd_data_dir)|default('', true) -}}

{% set cluster_options = [] -%}
{% if groups[etcd_peers_group] and groups[etcd_peers_group] | length > 0 -%}
{{ cluster_options.append('--initial-advertise-peer-urls=' + etcd_initial_advertise_peer_urls)|default('', true) -}}
{{ cluster_options.append('--initial-cluster=' + initial_cluster())|default('', true) -}}
{{ cluster_options.append('--initial-cluster-state=' + etcd_initial_cluster_state)|default('', true) -}}
{{ cluster_options.append('--initial-cluster-token=' + etcd_initial_cluster_token)|default('', true) -}}
{% endif -%}
{{ cluster_options.append('--listen-peer-urls=' + etcd_listen_peer_urls)|default('', true) -}}
{{ cluster_options.append('--advertise-client-urls=' + etcd_advertise_client_urls)|default('', true) -}}
{{ cluster_options.append('--listen-client-urls=' + etcd_listen_client_urls)|default('', true) -}}

{% set proxy_options = [] -%}
{{ proxy_options.append('--proxy=off')|default('', true) -}}

{% set security_options = [] -%}
{% if etcd_url_scheme == 'https' -%}
{{ security_options.append('--ca-file=' + etcd_ca_file)|default('', true) -}}
{{ security_options.append('--cert-file=' + etcd_cert_file)|default('', true) -}}
{{ security_options.append('--key-file=' + etcd_key_file)|default('', true) -}}
{% endif -%}
{% if etcd_peer_url_scheme == 'https' -%}
{{ security_options.append('--peer-ca-file=' + etcd_peer_ca_file)|default('', true) -}}
{{ security_options.append('--peer-cert-file=' + etcd_peer_cert_file)|default('', true) -}}
{{ security_options.append('--peer-key-file=' + etcd_peer_key_file)|default('', true) -}}
{% endif -%}
apiVersion: v1
kind: Pod
metadata:
  annotations:
    scheduler.alpha.kubernetes.io/critical-pod: ""
  creationTimestamp: null
  labels:
    component: etcd
    tier: control-plane
  name: etcd
  namespace: kube-system
spec:
  containers:
  - command:
    - etcd
{% for general_option in general_options %}
    - {{ general_option }}
{% endfor %}
{% for cluster_option in cluster_options %}
    - {{ cluster_option }}
{% endfor %}
{% for proxy_option in proxy_options %}
    - {{ proxy_option }}
{% endfor %}
{% for security_option in security_options %}
    - {{ security_option }}
{% endfor %}
    image: {{ docker_registry }}/etcd-amd64:3.0.17
    livenessProbe:
      failureThreshold: 8
      httpGet:
        host: 127.0.0.1
        path: /health
        port: 2379
        scheme: HTTP
      initialDelaySeconds: 15
      timeoutSeconds: 15
    name: etcd
    resources: {}
    volumeMounts:
    - mountPath: /etc/ssl/certs
      name: certs
    - mountPath: /var/lib/etcd
      name: etcd
    - mountPath: /etc/kubernetes
      name: k8s
      readOnly: true
  hostNetwork: true
  securityContext:
    seLinuxOptions:
      type: spc_t
  volumes:
  - hostPath:
      path: /etc/ssl/certs
    name: certs
  - hostPath:
      path: {{ etcd_data_dir }}
    name: etcd
  - hostPath:
      path: /etc/kubernetes
    name: k8s
status: {}
